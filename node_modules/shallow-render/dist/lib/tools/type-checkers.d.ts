import { ClassProvider, ExistingProvider, FactoryProvider, ModuleWithProviders, PipeTransform, Provider, TypeProvider, ValueProvider, Type } from '@angular/core';
export declare function isModuleWithProviders(thing: any): thing is ModuleWithProviders<any>;
export declare function isValueProvider(provider: Provider): provider is ValueProvider;
export declare function isExistingProvider(provider: Provider): provider is ExistingProvider;
export declare function isFactoryProvider(provider: Provider): provider is FactoryProvider;
export declare function isClassProvider(provider: Provider): provider is ClassProvider;
export declare function isTypeProvider(provider: Provider): provider is TypeProvider;
export declare function isPipeTransform(thing: any): thing is PipeTransform & Type<any>;
export declare const isClass: (thing: any) => thing is Type<any>;
declare const DECLARATION_TYPES: readonly ["Pipe", "Component", "Directive"];
export declare type DeclarationType = typeof DECLARATION_TYPES[number];
export declare const declarationTypes: (declaration: Type<any>) => Array<DeclarationType>;
export {};
