"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JitReflector = void 0;
const core_1 = require("@angular/core");
class JitReflector {
    constructor() {
        this.shallowAnnotations = (_typeOrFunc) => {
            throw new Error('Not supported in JIT mode');
        };
        this._reflectionCapabilities = new core_1.ɵReflectionCapabilities();
    }
    annotations(typeOrFunc) {
        return this._reflectionCapabilities.annotations(typeOrFunc);
    }
    componentModuleUrl(type, _cmpMetadata) {
        /* tslint:disable-line prefer-function-over-method */
        return `./${core_1.ɵstringify(type)}`;
    }
    // This does not exist in Angular 5.1.x but is required to exist in 5.2+
    guards(_type) {
        /* tslint:disable-line prefer-function-over-method */
        return {};
    }
    hasLifecycleHook(type, lcProperty) {
        return this._reflectionCapabilities.hasLifecycleHook(type, lcProperty);
    }
    parameters(typeOrFunc) {
        return this._reflectionCapabilities.parameters(typeOrFunc);
    }
    propMetadata(typeOrFunc) {
        return this._reflectionCapabilities.propMetadata(typeOrFunc);
    }
    resolveExternalReference(ref) {
        /* tslint:disable-line prefer-function-over-method */
        return ref.runtime;
    }
    tryAnnotations(typeOrFunc) {
        return this.annotations(typeOrFunc);
    }
}
exports.JitReflector = JitReflector;
//# sourceMappingURL=jit-reflector.js.map