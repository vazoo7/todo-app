"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockPipe = void 0;
const core_1 = require("@angular/core");
const reflect_1 = require("./reflect");
const get_provider_name_1 = require("./get-provider-name");
const mock_of_directive_1 = require("./mock-of.directive");
const mockPipe = (pipe, transform = () => undefined) => {
    const meta = reflect_1.pipeResolver.resolve(pipe);
    if (!meta) {
        throw new Error(`Cannot mock pipe ${get_provider_name_1.getProviderName(pipe)}`);
    }
    let Mock = class Mock {
        constructor() {
            this.transform = transform;
        }
    };
    Mock = __decorate([
        mock_of_directive_1.MockOf(pipe),
        core_1.Pipe({ name: meta.name })
    ], Mock);
    return Mock;
};
exports.mockPipe = mockPipe;
//# sourceMappingURL=mock-pipe.js.map